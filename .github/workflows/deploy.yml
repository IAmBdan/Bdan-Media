name: Deploy to AWS

on:
  push:
    branches:
      - main  # Adjust branch as needed

jobs:
  deploy_backend:
    name: Deploy Backend to Lightsail
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH and deploy backend
        env:
          LIGHTSAIL_PEM_KEY: ${{ secrets.LIGHTSAIL_PEM_KEY }}
          LIGHTSAIL_IP: ${{ secrets.LIGHTSAIL_IP }}
        run: |
          echo "$LIGHTSAIL_PEM_KEY" > lightsail-key.pem
          chmod 600 lightsail-key.pem
          ssh -o StrictHostKeyChecking=no -i lightsail-key.pem bitnami@$LIGHTSAIL_IP << 'EOF'
            cd ~/Bdan-Media/Node\ App
            git pull origin main
            npm install --production
            pm2 restart bdan-backend
            exit
          EOF

  deploy_frontend:
    name: Deploy Frontend to S3
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install AWS CLI
        run: |
          if ! command -v aws &> /dev/null
          then
              echo "AWS CLI not found. Installing..."
              curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
              unzip awscliv2.zip
              sudo ./aws/install --update
          else
              echo "AWS CLI is already installed"
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Build frontend
        run: |
          cd "React App"
          npm install
          CI=false npm run build

      - name: Debug S3 bucket name
        run: |
          if [ -z "${{ secrets.S3_BUCKET_NAME }}" ]; then
            echo "S3_BUCKET_NAME is not set or is empty"
            exit 1
          else
            echo "S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}"
          fi

      - name: Deploy to S3
        run: |
          aws s3 sync "./React App/build" s3://${{ secrets.S3_BUCKET_NAME }} --delete